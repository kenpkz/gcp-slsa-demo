steps:
- id: snyk-scan
  name: 'ubuntu:latest'
  entrypoint: sh
  args:
  - '-c'
  - | 
    apt-get update -y
    apt-get install nodejs -y
    apt-get install npm -y
    apt-get install maven -y
    npm install -g snyk
    npm install
    snyk auth $$SLSA_SNYK_TOKEN
    snyk monitor
  secretEnv:
    - SLSA_SNYK_TOKEN
- id: sonarqube-scan
  name: "node"
  entrypoint: sh
  args: 
  - '-c' 
  - |
    echo "SLSA_SONAR_TOKEN: $$SLSA_SONAR_TOKEN"
    npm install -g sonarqube-scanner
    sonar-scanner \
    -Dsonar.projectKey=slsa-demo \
    -Dsonar.host.url=https://${_SONARQUBE_SERVER} \
    -Dsonar.login=$$SLSA_SONAR_TOKEN \
    -Dsonar.qualitygate.wait=true 
  secretEnv: 
    - SLSA_SONAR_TOKEN
- id: build-container
  name: gcr.io/cloud-builders/gcloud
  entrypoint: sh
  args: 
  - '-c' 
  - |
    echo "TAG: ${SHORT_SHA}"
    gcloud builds submit --timeout=3000s --tag=${_IMAGE_PATH}:${SHORT_SHA} .
    ImageDigest=$(gcloud container images list-tags --format='get(digest)' ${_IMAGE_PATH} | head -1)
    echo "${_IMAGE_PATH}@${ImageDigest}" > image-digest.txt
- id: container-scan-kritis-sign
  name: gcr.io/slsa-demo/kritis-signer
  entrypoint: /bin/bash
  args:
  - '-c'
  - |
    /kritis/signer -v=10 -alsologtostderr \
    -image=$(/bin/cat image-digest.txt) \
    -policy=policy.yaml \
    -kms_key_name=${_KMS_IMAGEKEY_NAME} \
    -kms_digest_alg=${_KMS_DIGEST} \
    -note_name=${_NOTE_NAME}
  waitFor: ['build-container']
- id: 'Create Attestation After All Checked Are Passed'
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: sh
  args:
  - '-c'
  - |
    apt-get update -y
    apt-get install -y jq
    ImageDigest="$(gcloud container images list-tags --format='get(digest)' ${_IMAGE_PATH} | head -1)"
    ImageToAttest="${_IMAGE_PATH}@${ImageDigest}" 
    gcloud beta container binauthz attestations sign-and-create \
      --project="${PROJECT_ID}" \
      --artifact-url="${ImageToAttest}" \
      --attestor="${_ATTESTOR_NAME}" \
      --attestor-project="${PROJECT_ID}" \
      --keyversion-project="${PROJECT_ID}" \
      --keyversion-location="${_KMS_KEY_LOCATION}" \
      --keyversion-keyring="${_KMS_KEYRING_NAME}" \
      --keyversion-key="${_KMS_KEY_NAME}" \
      --keyversion="${_KMS_KEY_VERSION}"
    echo "Sign-And-Create to Image: ${ImageToAttest}"
  waitFor: [container-scan-kritis-sign]
- id: 'Change Deployment Image Tag Name & Trigger cloud deploy'
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: sh
  args: 
  - '-c'
  - |
    gcloud pubsub topics publish ${_RELEASE_PIPELINE} --message "Release Request for ${SHORT_SHA}"

substitutions:
# Replace the IMAGE_PATH to your own GCR path
  _IMAGE_PATH: asia-east2-docker.pkg.dev/slsa-demo/slsa-demo/sample-node
  _ATTESTOR_NAME: slsa-attestor
  _KMS_KEY_LOCATION: global
  _KMS_KEYRING_NAME: slsa-ga-keyring
  _KMS_DIGEST: SHA256
  _KMS_KEY_NAME: slsa-ga-key
  _KMS_IMAGEKEY_NAME: "projects/${PROJECT_ID}/locations/${_KMS_KEY_LOCATION}/keyRings/${_KMS_KEYRING_NAME}/cryptoKeys/slsa-image-key/cryptoKeyVersions/1"
  _KMS_KEY_VERSION: "1"
  _RELEASE_PIPELINE: slsa-demo-ga-release 
  # Replace with your SonarQube server URL
  _SONARQUBE_SERVER: "sonar.kendemo.app"
  _NOTE_NAME: projects/slsa-demo/notes/image-scan
timeout: 2800s
availableSecrets:
# Replace the project ID with your own Project ID
  secretManager:
  - versionName: projects/626509627908/secrets/SLSA_SNYK_TOKEN/versions/1
    env: 'SLSA_SNYK_TOKEN'
  - versionName: projects/626509627908/secrets/SLSA_SONAR_TOKEN/versions/1
    env: 'SLSA_SONAR_TOKEN'

